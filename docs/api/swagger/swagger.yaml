swagger: "2.0"
info:
  version: "1.0.0"
  title: Api Docs For Graphite/Graphana Event Listner 
  description: Node service to listen for graphana events and take steps for recovery 
  contact: 
    name: Cheten Dev
    email: dev440@gmail.com
    
# externalDocs: 
#   description: For Detailed information click here
#   url: http://35.154.15.240:4567
    
# during dev, should point to your local machine
host: localhost:10010
# basePath prefixes all resource paths 
basePath: /
# 
schemes:
  # tip: remove http to make production-grade
  - http
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
  
paths:
  
            
  /graphite/listner :
    # binds a127 app logic to a route
    x-swagger-router-controller: graphite
    post:
      tags: ["webhook"]
      description: | 
        This api listens for the event generated by graphana state changes and updates to mysql database .when state is alerting this service ssh into unhealthy server and fires a function(according to problematic metric) in shell script to fix the problem .once problem is fixed a slack notifiation is sent with list of tasks that ran during recovery 
      
      # used as the method name of the controller
      #operationId: hello
      parameters:
        - name: Graphana 
          in: body
          description: data sent by graphaha in body 
          required: true
          schema:
            $ref: "#/definitions/GraphanaBody"
      responses:
        "200":
          description: success 
          schema:
            # a pointer to a definition
            $ref: "#/definitions/200post"
        "500":
          description: Internal Server Error 
          schema:
            # a pointer to a definition
            $ref: "#/definitions/ErrorResponse"   
        "400":
          description: Bad Request
          schema:
            $ref: "#/definitions/ErrorResponse"    
            
    get:
      tags: ["server status"]
      description: | 
        This api is to fetch  details of health of servers stored in mysql database
      
      # used as the method name of the controller
      #operationId: hello

      responses:
        "200":
          description: success 
          schema:
            # a pointer to a definition
            $ref: "#/definitions/200status"
        "500":
          description: Internal Server Error 
          schema:
            # a pointer to a definition
            $ref: "#/definitions/ErrorResponse"   
        "400":
          description: Bad Request
          schema:
            $ref: "#/definitions/ErrorResponse"      
        
            
        
            
  /swagger:
    x-swagger-pipe: swagger_raw
  
# complex objects have schema definitions
definitions:
  GraphanaBody:
    type: object
    properties:
      evalMatches:
        type: array
        items:
          type: string
      message:
        type: string
        description: ip address of the unhealthy server
      ruleId:
        type: string
        description: rule id in graphana
      ruleName:
        type: string
        description: the problematic metric name 
      ruleUrl:
        type: string
        description: url to perticular graph in grapha dashboard
      state:
        type: string
        description: current state of the rule 
        enum: [ "ok", "alerting"]
      title:
        type: string
        description: title of the rule 
    required:
      - message
      - ruleName
      - state
      - ruleUrl

 
  200post:
    type: object
    properties:
      result:
        type: string 
        description: success or failure
        
  200status:
    type: array
    items:
      type: object
      properties:
        ip:
          type: string
        state:
          type: string
        ruleName:
          type: array 
          items:
            type: string
        ruleUrl:
          type: array 
          items:
            type: string
      required:
        - ip
        - state
        - ruleName
        - ruleUrl
        
        

  ErrorResponse:
    type: object
    properties:
      errors:
        type: array
        description: contains errors
        items:
          type: string
      code:
        type: string
        description: custom error codes 
        
    required:
      - errors
      - code
    
      